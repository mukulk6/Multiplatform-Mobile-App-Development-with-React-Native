{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Full Stack Web Development with React - Coursera\\\\ReactNative\\\\confusion\\\\components\\\\MainComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Menu from \"./MenuComponent\";\nimport Home from \"./HomeComponent\";\nimport About from \"./AboutComponent\";\nimport Contact from \"./ContactComponent\";\nimport { DISHES } from \"../shared/dishes\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dishdetail from \"./DishDetailComponent\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\nimport { Icon } from 'react-native-elements';\nvar HomeNavigator = createStackNavigator({\n  Home: {\n    screen: Home\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: \"#512DA8\"\n      },\n      headerTitleStyle: {\n        color: \"#fff\"\n      },\n      headerTintColor: \"#fff\"\n    };\n  }\n});\n\nvar CustomDrawerContentComponent = function CustomDrawerContentComponent(props) {\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container,\n    forceInSet: {\n      top: 'always',\n      horizontal: 'never'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.drawerHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"./images/logo.png\"),\n    style: styles.drawerImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.drawerHeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Ristorante Con Fusion\"))), React.createElement(DrawerItems, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  })));\n};\n\nvar MenuNavigator = createStackNavigator({\n  Menu: {\n    screen: Menu,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        headerLeft: React.createElement(Icon, {\n          name: \"menu\",\n          size: 24,\n          color: \"white\",\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 18\n          }\n        })\n      };\n    }\n  },\n  Dishdetail: {\n    screen: Dishdetail\n  }\n}, {\n  initialRouteName: 'Menu',\n  navigationOptions: {\n    headerStyle: {\n      backgroundColor: '#512DA8'\n    },\n    headerTintStyle: {\n      color: '#fff'\n    }\n  }\n});\nvar ContactNavigator = createStackNavigator({\n  Contact: {\n    screen: Contact\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#512DA8'\n      },\n      headerTintStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"menu\",\n        size: 24,\n        color: \"white\",\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 18\n        }\n      })\n    };\n  }\n});\nvar AboutUsNavigator = createStackNavigator({\n  About: {\n    screen: About\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref4) {\n    var navigation = _ref4.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: \"#512DA8\"\n      },\n      headerTitleStyle: {\n        color: \"#fff\"\n      },\n      headerTintColor: \"#fff\",\n      headerLeft: React.createElement(Icon, {\n        name: \"menu\",\n        size: 24,\n        color: \"white\",\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }\n      })\n    };\n  }\n});\nvar MainNavigator = createDrawerNavigator({\n  Home: {\n    screen: HomeNavigator,\n    navigationOptions: {\n      title: 'Home',\n      drawerLabel: 'Home',\n      drawerIcon: function drawerIcon(_ref5) {\n        var tintColor = _ref5.tintColor;\n        return React.createElement(Icon, {\n          name: \"home\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  },\n  About: {\n    screen: AboutUsNavigator,\n    navigationOptions: {\n      title: 'About',\n      drawerLabel: 'About',\n      drawerIcon: function drawerIcon(_ref6) {\n        var tintColor = _ref6.tintColor;\n        return React.createElement(Icon, {\n          name: \"info-circle\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  },\n  Menu: {\n    screen: MenuNavigator,\n    navigationOptions: {\n      title: 'Menu',\n      drawerLabel: 'Menu',\n      drawerIcon: function drawerIcon(_ref7) {\n        var tintColor = _ref7.tintColor;\n        return React.createElement(Icon, {\n          name: \"list\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  },\n  Contact: {\n    screen: ContactNavigator,\n    navigationOptions: {\n      title: 'Contact Us',\n      drawerLabel: 'Contact Us',\n      drawerIcon: function drawerIcon(_ref8) {\n        var tintColor = _ref8.tintColor;\n        return React.createElement(Icon, {\n          name: \"address-card\",\n          type: \"font-awesome\",\n          size: 22,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }\n}, {\n  drawerBackgroundColor: '#D1C4E9',\n  contentComponent: CustomDrawerContentComponent\n});\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"onDishSelect\",\n    value: function onDishSelect(dishId) {\n      this.setState({\n        selectedDish: dishId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: Platform.OS === 'ios' ? 0 : Expo.Constants.statusBarHeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, React.createElement(MainNavigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawerHeader: {\n    backgroundColor: '#512DA8',\n    height: 140,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    flexDirection: 'row'\n  },\n  drawerHeaderText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  drawerImage: {\n    margin: 10,\n    width: 80,\n    height: 60\n  }\n});\nexport default Main;","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/components/MainComponent.js"],"names":["React","Component","Menu","Home","About","Contact","DISHES","Dishdetail","createStackNavigator","createAppContainer","createDrawerNavigator","DrawerItems","Icon","HomeNavigator","screen","navigationOptions","navigation","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","CustomDrawerContentComponent","props","styles","container","top","horizontal","drawerHeader","flex","require","drawerImage","drawerHeaderText","MenuNavigator","headerLeft","toggleDrawer","initialRouteName","headerTintStyle","ContactNavigator","AboutUsNavigator","MainNavigator","title","drawerLabel","drawerIcon","tintColor","drawerBackgroundColor","contentComponent","Main","dishId","setState","selectedDish","paddingTop","Platform","OS","Expo","Constants","statusBarHeight","StyleSheet","create","height","alignItems","justifyContent","flexDirection","fontSize","fontWeight","margin","width"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport {DISHES} from '../shared/dishes';\r\nimport {View,Platform,Image,StyleSheet,ScrollView, SafeAreaView,Text} from 'react-native';\r\nimport Dishdetail from './DishDetailComponent';\r\nimport {createStackNavigator} from 'react-navigation-stack';\r\nimport {createAppContainer} from 'react-navigation';\r\nimport { createDrawerNavigator,DrawerItems } from 'react-navigation-drawer';\r\nimport {Icon} from 'react-native-elements';\r\n\r\nconst HomeNavigator = createStackNavigator({\r\n    Home: { screen: Home }\r\n  }, {\r\n    navigationOptions: ({ navigation }) => ({\r\n      headerStyle: {\r\n          backgroundColor: \"#512DA8\"\r\n      },\r\n      headerTitleStyle: {\r\n          color: \"#fff\"            \r\n      },\r\n      headerTintColor: \"#fff\"  \r\n    })\r\n});\r\n\r\nconst CustomDrawerContentComponent = (props) => (\r\n  <ScrollView>\r\n    <SafeAreaView style = {styles.container}\r\n    forceInSet ={{top:'always',horizontal:'never'}} />\r\n    <View style={styles.drawerHeader}>\r\n      <View style={{flex:1}}>\r\n        <Image source={require('./images/logo.png')}\r\n        style={styles.drawerImage} />\r\n      </View>\r\n      <View style={{flex:2}}>\r\n        <Text style={styles.drawerHeaderText}>Ristorante Con Fusion</Text>\r\n      </View>\r\n    </View>\r\n    <DrawerItems {...props}></DrawerItems>\r\n  </ScrollView>\r\n)\r\n\r\nconst MenuNavigator = createStackNavigator({\r\n    Menu : {screen : Menu,navigationOptions:({navigation})=>({\r\n      headerLeft:<Icon name=\"menu\" size={24} color='white' onPress={()=>navigation.toggleDrawer()} />\r\n    })},\r\n    Dishdetail : {screen:Dishdetail}\r\n},\r\n{\r\n    initialRouteName : 'Menu',\r\n    navigationOptions:{\r\n        headerStyle:{backgroundColor:'#512DA8'},\r\n        headerTintStyle:{\r\n            color:'#fff'\r\n        }\r\n    }\r\n})\r\n\r\nconst ContactNavigator = createStackNavigator({\r\n  Contact : {screen:Contact}\r\n},\r\n{\r\n  navigationOptions:({navigation})=>({\r\n      headerStyle:{backgroundColor:'#512DA8'},\r\n      headerTintStyle:{\r\n          color:'#fff'\r\n      },\r\n      headerLeft:<Icon name=\"menu\" size={24} color='white' onPress={()=>navigation.toggleDrawer()} />\r\n  })\r\n})\r\n\r\nconst AboutUsNavigator = createStackNavigator({\r\n  About: { screen: About }\r\n}, {\r\n      navigationOptions: ({ navigation }) => ({\r\n          headerStyle: {\r\n              backgroundColor: \"#512DA8\"\r\n          },\r\n          headerTitleStyle: {\r\n              color: \"#fff\"\r\n          },\r\n          headerTintColor: \"#fff\",\r\n          headerLeft: <Icon name='menu' size={24}\r\n              color='white'\r\n              onPress={() => navigation.toggleDrawer()}\r\n          />\r\n      })\r\n  });\r\n\r\n  const MainNavigator = createDrawerNavigator({\r\n    Home: \r\n      { screen: HomeNavigator,\r\n        navigationOptions: {\r\n          title: 'Home',\r\n          drawerLabel: 'Home',\r\n          drawerIcon :({tintColor})=> (\r\n            <Icon name='home' type='font-awesome' size={24} color={tintColor} />\r\n          )\r\n        }\r\n      },\r\n      About:{\r\n        screen:AboutUsNavigator,\r\n        navigationOptions : {\r\n          title:'About',\r\n          drawerLabel:'About',\r\n          drawerIcon :({tintColor})=> (\r\n            <Icon name='info-circle' type='font-awesome' size={24} color={tintColor} />)\r\n        }\r\n      },\r\n    Menu: \r\n      { screen: MenuNavigator,\r\n        navigationOptions: {\r\n          title: 'Menu',\r\n          drawerLabel: 'Menu',\r\n          drawerIcon :({tintColor})=> (\r\n            <Icon name='list' type='font-awesome' size={24} color={tintColor} />)\r\n        }, \r\n      },\r\n    Contact:\r\n    {\r\n      screen: ContactNavigator,\r\n        navigationOptions: {\r\n          title: 'Contact Us',\r\n          drawerLabel: 'Contact Us',\r\n          drawerIcon :({tintColor})=> (\r\n            <Icon name='address-card' type='font-awesome' size={22} color={tintColor} />)\r\n        },\r\n    },\r\n  },\r\n    {\r\n  drawerBackgroundColor: '#D1C4E9',\r\n  contentComponent:CustomDrawerContentComponent\r\n    })\r\n\r\n// const MainAppNavigator = createAppContainer(MainNavigator);\r\n\r\nclass Main extends Component {\r\nonDishSelect(dishId){\r\n    this.setState({selectedDish:dishId})\r\n}\r\n    render(){\r\n        return(\r\n          <View style={{ flex: 1, paddingTop: Platform.OS === 'ios' ? 0 : Expo.Constants.statusBarHeight }}>\r\n            <MainNavigator />\r\n            </View>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1\r\n  },\r\n  drawerHeader:{\r\n    backgroundColor: '#512DA8',\r\n    height: 140,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    flexDirection: 'row'\r\n  },\r\n  drawerHeaderText: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n    fontWeight: 'bold'\r\n  },\r\n  drawerImage: {\r\n    margin: 10,\r\n    width: 80,\r\n    height: 60\r\n  }\r\n\r\n})\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}