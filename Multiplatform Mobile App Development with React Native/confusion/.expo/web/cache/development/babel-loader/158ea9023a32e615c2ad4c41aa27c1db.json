{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport var comments = function comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    errMess: null,\n    comments: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: null,\n        comments: action.payload\n      });\n\n    case ActionTypes.COMMENTS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: action.payload\n      });\n\n    case ActionTypes.ADD_COMMENT:\n      var comments = state.comments;\n\n      var comment = _objectSpread({\n        id: comments.length\n      }, action.payload);\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        comments: comments.concat(comment)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/redux/comments.js"],"names":["ActionTypes","comments","state","errMess","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED","ADD_COMMENT","comment","id","length","concat"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,QAAQ,GAAG,oBAAmD;AAAA,MAAlDC,KAAkD,uEAA1C;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBF,IAAAA,QAAQ,EAAC;AAA1B,GAA0C;AAAA,MAAXG,MAAW;;AACzE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,YAAjB;AACE,6CAAWJ,KAAX;AAAkBC,QAAAA,OAAO,EAAE,IAA3B;AAAiCF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAAlD;;AAEF,SAAKP,WAAW,CAACQ,eAAjB;AACE,6CAAWN,KAAX;AAAkBC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAAlC;;AAEF,SAAKP,WAAW,CAACS,WAAjB;AAAA,UACUR,QADV,GACuBC,KADvB,CACUD,QADV;;AAEI,UAAMS,OAAO;AAAKC,QAAAA,EAAE,EAAEV,QAAQ,CAACW;AAAlB,SAA6BR,MAAM,CAACG,OAApC,CAAb;;AACA,6CAAYL,KAAZ;AAAmBD,QAAAA,QAAQ,EAAEA,QAAQ,CAACY,MAAT,CAAgBH,OAAhB;AAA7B;;AAEJ;AACE,aAAOR,KAAP;AAbJ;AAeD,CAhBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var { comments } = state;\r\n        const comment = { id: comments.length, ...action.payload };\r\n        return { ...state, comments: comments.concat(comment) };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}