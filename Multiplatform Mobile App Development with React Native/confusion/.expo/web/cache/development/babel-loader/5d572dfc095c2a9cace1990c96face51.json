{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Full Stack Web Development with React - Coursera\\\\ReactNative\\\\confusion\\\\components\\\\DishDetailComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Icon } from 'react-native-elements';\nimport { DISHES } from \"../shared/dishes\";\nimport { COMMENTS } from \"../shared/comments\";\n\nfunction RenderDish(props) {\n  var dish = props.dish;\n\n  if (dish != null) {\n    return React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: require(\"./images/uthappizza.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, dish.description));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nfunction RenderComments(props) {\n  var _this = this;\n\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, item.rating, \" Stars\"), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, '--' + item.author + ',' + item.date));\n  };\n\n  return React.createElement(Card, {\n    title: \"Comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Dishdetail = function (_Component) {\n  _inherits(Dishdetail, _Component);\n\n  var _super = _createSuper(Dishdetail);\n\n  function Dishdetail(props) {\n    var _this2;\n\n    _classCallCheck(this, Dishdetail);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      dishes: DISHES,\n      comments: COMMENTS\n    };\n    return _this2;\n  }\n\n  _createClass(Dishdetail, [{\n    key: \"render\",\n    value: function render() {\n      var dishId = this.props.navigation.getParam('dishId', '');\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(RenderDish, {\n        dish: this.state.dishes[+dishId],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }), React.createElement(RenderComments, {\n        comments: this.state.comments.filter(function (comment) {\n          return comment.dishId === dishId;\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Dishdetail;\n}(Component);\n\nDishdetail.navigationOptions = {\n  title: 'Dish Details'\n};\nexport default Dishdetail;","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/components/DishDetailComponent.js"],"names":["React","Component","Card","Icon","DISHES","COMMENTS","RenderDish","props","dish","name","require","margin","description","RenderComments","comments","renderCommentItem","item","index","fontSize","comment","rating","author","date","id","toString","Dishdetail","state","dishes","dishId","navigation","getParam","filter","navigationOptions","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;;;;;AAEA,SAAQC,IAAR,EAAaC,IAAb,QAAwB,uBAAxB;AACA,SAAQC,MAAR;AACA,SAAQC,QAAR;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACtB,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;;AACA,MAAGA,IAAI,IAAE,IAAT,EAAc;AACV,WACI,oBAAC,IAAD;AACA,MAAA,aAAa,EAAEA,IAAI,CAACC,IADpB;AAEA,MAAA,KAAK,EAAEC,OAAO,2BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACI,WADV,CAHJ,CADJ;AASH,GAVD,MAYA;AACI,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AACJ;;AAED,SAASC,cAAT,CAAwBN,KAAxB,EAA8B;AAAA;;AAC1B,MAAMO,QAAQ,GAAGP,KAAK,CAACO,QAAvB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAkB;AAAA,QAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AACxC,WACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,KAAK,EAAE;AAACN,QAAAA,MAAM,EAAC;AAAR,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACO,QAAAA,QAAQ,EAAC;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,OADV,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACD,QAAAA,QAAQ,EAAC;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACI,MADV,WAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACF,QAAAA,QAAQ,EAAC;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,OAAKF,IAAI,CAACK,MAAV,GAAiB,GAAjB,GAAqBL,IAAI,CAACM,IAD/B,CAPJ,CADJ;AAaH,GAdD;;AAeA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAER,QAAhB;AAA0B,IAAA,UAAU,EAAEC,iBAAtC;AAAyD,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAEA,IAAI,CAACO,EAAL,CAAQC,QAAR,EAAF;AAAA,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;IAEKC,U;;;;;AACF,sBAAYlB,KAAZ,EACA;AAAA;;AAAA;;AACI,+BAAMA,KAAN;AACA,WAAKmB,KAAL,GAAa;AACTC,MAAAA,MAAM,EAACvB,MADE;AAETU,MAAAA,QAAQ,EAACT;AAFA,KAAb;AAFJ;AAMC;;;;6BAKO;AACJ,UAAMuB,MAAM,GAAG,KAAKrB,KAAL,CAAWsB,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAwC,EAAxC,CAAf;AACJ,aACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAI,KAAKJ,KAAL,CAAWC,MAAX,CAAkB,CAACC,MAAnB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWZ,QAAX,CAAoBiB,MAApB,CAA2B,UAACZ,OAAD;AAAA,iBAAWA,OAAO,CAACS,MAAR,KAAiBA,MAA5B;AAAA,SAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ;AAMC;;;;EArBoB3B,S;;AAAnBwB,U,CAUKO,iB,GAAoB;AACvBC,EAAAA,KAAK,EAAC;AADiB,C;AAc/B,eAAeR,UAAf","sourcesContent":["import React, {Component } from 'react';\r\nimport {View,Text,ScrollView,FlatList} from 'react-native';\r\nimport {Card,Icon} from 'react-native-elements';\r\nimport {DISHES} from '../shared/dishes';\r\nimport {COMMENTS} from '../shared/comments';\r\n\r\nfunction RenderDish(props){\r\n    const dish = props.dish;\r\n    if(dish!=null){\r\n        return(\r\n            <Card\r\n            featuredTitle={dish.name}\r\n            image={require('./images/uthappizza.png')}>\r\n                <Text style={{margin:10}}>\r\n                    {dish.description}\r\n                </Text>\r\n            </Card>\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return(\r\n            <View></View>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderComments(props){\r\n    const comments = props.comments;\r\n\r\n    const renderCommentItem = ({item,index}) => {\r\n        return(\r\n            <View key={index} style={{margin:10}}>\r\n                <Text style={{fontSize:14}}>\r\n                    {item.comment}\r\n                </Text>\r\n                <Text style={{fontSize:12}} >\r\n                    {item.rating} Stars\r\n                </Text>\r\n                <Text style={{fontSize:12}}>\r\n                    {'--'+item.author+','+item.date}\r\n                </Text>\r\n            </View>\r\n        )\r\n    }\r\n    return(\r\n        <Card title=\"Comments\">\r\n            <FlatList data={comments} renderItem={renderCommentItem} keyExtractor={item=>item.id.toString()} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nclass Dishdetail extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            dishes:DISHES,\r\n            comments:COMMENTS\r\n        };\r\n    }\r\n\r\n    static navigationOptions = {\r\n        title:'Dish Details'\r\n    };\r\n    render(){\r\n        const dishId = this.props.navigation.getParam('dishId','');\r\n    return(\r\n        <ScrollView>\r\n        <RenderDish dish = {this.state.dishes[+dishId]}/>\r\n        <RenderComments comments={this.state.comments.filter((comment)=>comment.dishId===dishId)} />\r\n        </ScrollView>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Dishdetail;"]},"metadata":{},"sourceType":"module"}