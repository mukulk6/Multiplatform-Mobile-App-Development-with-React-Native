{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading());\n    return fetch(baseUrl + 'leaders').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\nexport var postFavorite = function postFavorite(dishId) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(addfavorite(dishId));\n    }, 2000);\n  };\n};\nexport var addFavorite = function addFavorite(dishId) {\n  return {\n    type: ActionTypes.ADD_FAVORITE,\n    payload: dishId\n  };\n};\nexport var addComment = function addComment(comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n  };\n};\nexport var postComment = function postComment(dishId, rating, comment, author) {\n  return function (dispatch) {\n    var newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    return fetch(baseUrl + 'comments', {\n      method: 'POST',\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      throw error;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return setTimeout(function () {\n        dispatch(addComment(response));\n      }, 2000);\n    }).catch(function (error) {\n      console.log('post comments', errorr.message);\n      alert('Your comment cannot be posted\\nError: ' + error.message);\n    });\n  };\n};","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchComments","dispatch","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","comments","addComments","catch","commentsFailed","type","COMMENTS_FAILED","payload","ADD_COMMENTS","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFavorite","dishId","setTimeout","addfavorite","addFavorite","ADD_FAVORITE","addComment","comment","ADD_COMMENT","postComment","rating","author","newComment","date","Date","toISOString","method","body","JSON","stringify","headers","credentials","console","log","errorr","alert"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading());\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFavorite = (dishId) => (dispatch) => {\r\n    setTimeout(()=>{\r\n        dispatch(addfavorite(dishId));\r\n    },2000)\r\n}\r\n\r\nexport const addFavorite = (dishId) => ({\r\n    type:ActionTypes.ADD_FAVORITE, \r\n    payload:dishId\r\n})\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, comment, author) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => setTimeout(() => {dispatch(addComment(response))}, 2000))\r\n    .catch(error => { console.log('post comments', errorr.message); alert('Your comment cannot be posted\\nError: ' + error.message); });\r\n};"]},"metadata":{},"sourceType":"module"}