{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport var promotions = function promotions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_PROMOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: null,\n        promotions: action.payload\n      });\n\n    case ActionTypes.PROMOS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n      });\n\n    case ActionTypes.PROMOS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/redux/promotions.js"],"names":["ActionTypes","promotions","state","isLoading","errMess","action","type","ADD_PROMOS","payload","PROMOS_LOADING","PROMOS_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAEyC;AAAA,MAFxCC,KAEwC,uEAF/B;AAAEC,IAAAA,SAAS,EAAE,IAAb;AACIC,IAAAA,OAAO,EAAE,IADb;AAEIH,IAAAA,UAAU,EAAC;AAFf,GAE+B;AAAA,MAAXI,MAAW;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,UAAjB;AACA,6CAAWL,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAE,IAA7C;AAAmDH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAAtE;;AAEA,SAAKR,WAAW,CAACS,cAAjB;AACI,6CAAWP,KAAX;AAAkBC,QAAAA,SAAS,EAAE,IAA7B;AAAmCC,QAAAA,OAAO,EAAE,IAA5C;AAAkDH,QAAAA,UAAU,EAAE;AAA9D;;AAEJ,SAAKD,WAAW,CAACU,aAAjB;AACI,6CAAWR,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAApD;;AAEJ;AACE,aAAON,KAAP;AAXN;AAaH,CAhBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};"]},"metadata":{},"sourceType":"module"}