{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport var dishes = function dishes() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      });\n\n    case ActionTypes.DISHES_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      });\n\n    case ActionTypes.DISHES_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/redux/dishes.js"],"names":["ActionTypes","dishes","state","isLoading","errMess","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAEK;AAAA,MAFJC,KAEI,uEAFI;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAC3BC,IAAAA,OAAO,EAAE,IADkB;AAE3BH,IAAAA,MAAM,EAAC;AAFoB,GAEJ;AAAA,MAAXI,MAAW;;AAC3B,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKN,WAAW,CAACO,UAAjB;AACA,6CAAWL,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAE,IAA7C;AAAmDH,QAAAA,MAAM,EAAEI,MAAM,CAACG;AAAlE;;AAEA,SAAKR,WAAW,CAACS,cAAjB;AACA,6CAAWP,KAAX;AAAkBC,QAAAA,SAAS,EAAE,IAA7B;AAAmCC,QAAAA,OAAO,EAAE,IAA5C;AAAkDH,QAAAA,MAAM,EAAE;AAA1D;;AAEA,SAAKD,WAAW,CAACU,aAAjB;AACA,6CAAWR,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAApD;;AAEA;AACA,aAAON,KAAP;AAXA;AAaC,CAhBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_DISHES:\r\nreturn {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\ncase ActionTypes.DISHES_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\ncase ActionTypes.DISHES_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};"]},"metadata":{},"sourceType":"module"}