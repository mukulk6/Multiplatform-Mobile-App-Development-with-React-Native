{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Full Stack Web Development with React - Coursera\\\\ReactNative\\\\confusion\\\\components\\\\FavoriteComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Tile, Image, ListItem } from 'react-native-elements';\nimport { DISHES } from \"../shared/dishes\";\nimport { connect } from 'react-redux';\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport Swipeable from 'react-native-gesture-handler';\nimport { deleteFavorite as _deleteFavorite } from \"../redux/ActionCreators\";\nimport * as Animatable from 'react-native-animatable';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    favorites: favorites\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteFavorite: function deleteFavorite(dishId) {\n      return dispatch(_deleteFavorite(dishId));\n    }\n  };\n};\n\nvar Favorites = function (_Component) {\n  _inherits(Favorites, _Component);\n\n  var _super = _createSuper(Favorites);\n\n  function Favorites() {\n    _classCallCheck(this, Favorites);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Favorites, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigate = this.props.navigation.navigate;\n\n      var RenderMenuItem = function RenderMenuItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        var rightButton = [{\n          text: 'Delete',\n          type: 'delete',\n          onPress: function onPress() {\n            Alert.alert('Delete Favorite?', 'Are you sure you wish to delete the favorite dish ' + item.name + '?', [{\n              text: 'Cancel',\n              onPress: function onPress() {\n                return console.log(item.name + 'Not Deleted');\n              },\n              style: ' cancel'\n            }, {\n              text: 'OK',\n              onPress: function onPress() {\n                return _this.props.deleteFavorite(item.id);\n              }\n            }], {\n              cancelable: false\n            });\n          }\n        }];\n        return React.createElement(Swipeable, {\n          rightThreshold: rightButton,\n          close: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, React.createElement(Animatable.View, {\n          animation: \"fadeInRightBig\",\n          duration: 2000,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, React.createElement(ListItem, {\n          key: index,\n          title: item.name,\n          subtitle: item.description,\n          hideCheveron: true,\n          onPress: function onPress() {\n            return navigate('Dishdetail', {\n              dishId: item.id\n            });\n          },\n          leftAvatar: {\n            source: {\n              uri: baseUrl + item.image\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        })));\n      };\n\n      if (this.props.dishes.isLoading) {\n        return React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        });\n      } else if (this.props.errMess) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }\n        }, this.props.dishes.errMess));\n      } else {\n        return React.createElement(Flatlist, {\n          data: this.props.dishes.dishes.filter(function (dish) {\n            return _this.props.favorites.some(function (el) {\n              return el === dish.id;\n            });\n          }),\n          renderItem: renderItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }]);\n\n  return Favorites;\n}(Component);\n\nFavorites.navigationOptions = {\n  title: 'My Favorites'\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","map":{"version":3,"sources":["F:/Full Stack Web Development with React - Coursera/ReactNative/confusion/components/FavoriteComponent.js"],"names":["React","Component","Tile","Image","ListItem","DISHES","connect","Loading","baseUrl","Swipeable","deleteFavorite","Animatable","mapStateToProps","state","dishes","favorites","mapDispatchToProps","dispatch","dishId","Favorites","navigate","props","navigation","RenderMenuItem","item","index","rightButton","text","type","onPress","Alert","alert","name","console","log","style","id","cancelable","description","source","uri","image","isLoading","errMess","filter","dish","some","el","renderItem","toString","navigationOptions","title"],"mappings":"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","sourcesContent":["\r\nimport React, {Component } from 'react';\r\nimport {View,FlatList, Alert} from 'react-native';\r\nimport {Tile,Image, ListItem} from 'react-native-elements';\r\nimport { DISHES } from '../shared/dishes';\r\nimport {connect} from 'react-redux';\r\nimport {Loading} from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport Swipeable from 'react-native-gesture-handler';\r\nimport {deleteFavorite} from '../redux/ActionCreators';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        dishes:state.dishes,\r\n        favorites:favorites\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteFavorite:(dishId) => dispatch(deleteFavorite(dishId))\r\n});\r\n\r\nclass Favorites extends Component {\r\n    static navigationOptions = {\r\n        title : 'My Favorites'\r\n    }\r\nrender()\r\n{\r\n    const {navigate} = this.props.navigation;\r\n\r\n\r\n\r\n    const RenderMenuItem = ({item,index})=> {\r\n        const rightButton = [\r\n            {\r\n                text: 'Delete', \r\n                type: 'delete',\r\n                onPress: () => {\r\n                    Alert.alert(\r\n                        'Delete Favorite?',\r\n                        'Are you sure you wish to delete the favorite dish ' + item.name + '?',\r\n                        [\r\n                            { \r\n                                text: 'Cancel', \r\n                                onPress: () => console.log(item.name + 'Not Deleted'),\r\n                                style: ' cancel'\r\n                            },\r\n                            {\r\n                                text: 'OK',\r\n                                onPress: () => this.props.deleteFavorite(item.id)\r\n                            }\r\n                        ],\r\n                        { cancelable: false }\r\n                    );\r\n                    \r\n                }\r\n            }\r\n        ];\r\n        return(\r\n            <Swipeable rightThreshold={rightButton} close={true}>\r\n                <Animatable.View animation = \"fadeInRightBig\" duration={2000}>\r\n            <ListItem key={index} title={item.name} subtitle={item.description} hideCheveron={true} onPress={()=>navigate('Dishdetail',{dishId:item.id})} leftAvatar={{source:{uri:baseUrl + item.image}}} />\r\n            </Animatable.View>\r\n            </Swipeable>\r\n            )\r\n    }\r\n\r\n    if(this.props.dishes.isLoading){\r\n        return(\r\n            <Loading />\r\n        )\r\n    }\r\n    else if(this.props.errMess)\r\n    {\r\n        return(\r\n            <View>\r\n                <Text>{this.props.dishes.errMess}</Text>\r\n            </View>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Flatlist data = {this.props.dishes.dishes.filter(dish => this.props.favorites.some(el=>el===dish.id))}\r\n            renderItem = {renderItem}\r\n            keyExtractor={item => item.id.toString()} />\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Favorites);"]},"metadata":{},"sourceType":"module"}